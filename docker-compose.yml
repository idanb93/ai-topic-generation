
services:
  ##############################
  # Database Container
  ##############################
  postgres:
    image: postgres:latest
    container_name: promoter-ai-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: promoter-ai-db
    ports:
      - "5433:5432"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mynet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  # ##############################
  # # Backend Container
  # ##############################
  backend:
    restart: always
    container_name: promoter-ai-backend
    hostname: backend
    environment:
      - DATABASE_URL=postgresql://postgres:1111@postgres:5432/promoter-ai-db?schema=public
      - SERVER_PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=1111
      - DB_NAME=promoter-ai-db
    build:
      dockerfile: ./Dockerfile
      context: ./backend
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mynet
    ports:
      - "3001:3001"

  # ##############################
  # # Frontend Container
  # ##############################
  frontend:
    restart: always
    container_name: promoter-ai-frontend
    hostname: frontend
    build:
      dockerfile: ./Dockerfile
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - "backend"
    networks:
      - mynet
networks:
  mynet:
    driver: bridge
